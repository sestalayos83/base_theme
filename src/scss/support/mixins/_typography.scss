// -------- Typography settings ------------

/* --------------How to use---------------- */
//    @include font-size($h1-font-size);
/* ---------------------------------------- */

// Gets typography map and breakpoints, for each breakpoint,
@mixin font-size($map, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $font-size in $map {
    // made for values that are being repeated in all breakpoints
    @if $breakpoint == default {
      @include make-font-size($font-size);
    }
    @else {
      // if $font-size is a key that exists in $breakpoints, use the value
      @if map-has-key($breakpoints, $breakpoint) {
        $breakpoint: map-get($breakpoints, $breakpoint);
      }
      @media screen and (min-width: $breakpoint) {
        @include make-font-size($font-size);
      }
    }
  }
}


// Utility function for mixin font-size / line-height
@mixin make-font-size($font-size) {
  // if $font-size is a list, include font-size and line-height
  @if type-of($font-size) == "list" {
    font-size: nth($font-size, 1);
    @if (length($font-size) > 1) {
      line-height: nth($font-size, 2);
    }
  }
  @else {
    font-size: $font-size;
  }
}


// Function loop for headings h1, h2, h3, h4, h5, h6
// provides an easy way to apply styles to all of the 6 standardised
// HTML headings (h1,h2,h3,h4,h5,h6).
@function headings($from:1, $to:6) {
  @if $from == $to {
    @return "h#{$from}";
  } @else {
    @return "h#{$from}," + headings($from+1, $to);
  }
}

@mixin light {
  font-weight: $fw-300;
  font-family: $font-family-light;
}

@mixin regular {
  font-weight: $fw-400;
  font-family: $font-family-base;
}

@mixin bold {
  font-weight: $fw-700;
  font-family: $font-family-bold;
}


/* --------------How to use---------------- */
//    @include ellipsis;
/* ---------------------------------------- */

@mixin ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}